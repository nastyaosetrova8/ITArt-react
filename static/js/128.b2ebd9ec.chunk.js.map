{"version":3,"file":"static/js/128.b2ebd9ec.chunk.js","mappings":"kMAEMA,EAAkBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ubAsBrBC,EAAcH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4HAQrC,K,8GC9BaG,EAAgBL,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,o0B,SCgBvC,I,UAAA,EAbA,WACE,IAAMI,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAI5B,OAFAC,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACH,KAGnBI,EAAAA,EAAAA,MAACL,EAAa,CAAAM,SAAA,EACZC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeF,SAAC,kBAC9BD,EAAAA,EAAAA,MAAA,KAAGG,UAAU,UAASF,SAAA,CAAC,UAAGL,EAAQQ,QAAQ,QAGhD,E,UCbaC,EAAgBf,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,o4CAyE1Bc,GAAahB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAeI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,myB,8GCxE5BgB,GAAuBlB,EAAAA,EAAAA,IAAOmB,EAAAA,EAAPnB,CAAsBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,w+BA4D7CkB,EAAwBpB,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,y1B,0mPC9DlCmB,EAAwBrB,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iMCUlCoB,EAAgB,SAAHC,GAA0B,IAApBC,EAAYD,EAAZC,aACxBC,EAAiB,CAAEC,IAAK,IAAKC,IAAK,KAElCC,EAAYJ,EAAaK,KAAI,SAAAC,GAAQ,MAAK,CAC9CA,SAAUC,OAAOC,KAAKP,GAAgBQ,MACpC,SAAAC,GAAG,OAAIT,EAAeS,KAASJ,EAASK,aAAa,IAEvDC,SAAUN,EAASO,QAAQvB,QAAQ,GACnCwB,KAAMR,EAASS,SAASzB,QAAQ,GACjC,IAEK0B,EAAUhB,EAAaS,MAAK,SAAAQ,GAAI,OAA2B,MAAvBA,EAAKN,aAAqB,IAC9DO,EAAUlB,EAAaS,MAAK,SAAAQ,GAAI,OAA2B,MAAvBA,EAAKN,aAAqB,IAIpE,OACEzB,EAAAA,EAAAA,MAACW,EAAqB,CAACR,UAAU,gBAAeF,SAAA,EAC9CC,EAAAA,EAAAA,KAACM,EAAoB,CACnByB,UAAWC,EAAAA,EACXC,GAAI,CAAEC,WAAY,cAAeC,UAAW,QAASpC,UAErDD,EAAAA,EAAAA,MAACsC,EAAAA,EAAK,CAACH,GAAI,CAAEI,MAAO,QAAStC,SAAA,EAC3BC,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAAAvC,UACRD,EAAAA,EAAAA,MAACyC,EAAAA,EAAQ,CAAAxC,SAAA,EACPC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACvC,UAAU,cAAcwC,MAAM,SAAQ1C,SAAC,cAGlDC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACvC,UAAU,cAAcwC,MAAM,SAAQ1C,SAAC,cAGlDC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACvC,UAAU,UAAUwC,MAAM,OAAM1C,SAAC,eAKhDC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,CAAA3C,SACPiB,EAAUC,KAAI,SAAA0B,GAAG,OAChB7C,EAAAA,EAAAA,MAACyC,EAAAA,EAAQ,CAAAxC,SAAA,EACPC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACC,MAAM,SAAQ1C,SAAE4C,EAAIzB,YAC/BlB,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACC,MAAM,SAASxC,UAAU,cAAaF,SAC9C4C,EAAInB,YAEPxB,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACC,MAAM,OAAOxC,UAAU,UAASF,SACxC4C,EAAIjB,SANMiB,EAAIzB,SAQR,YAKnBpB,EAAAA,EAAAA,MAACU,EAAqB,CAAAT,SAAA,EACpBC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaF,SAAE6B,EAAQD,SAASzB,QAAQ,MACrDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaF,SAAE+B,EAAQH,SAASzB,QAAQ,UAI7D,E,oBCvBA,MAxCA,WACE,IAAA0C,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/ChC,EAAYkC,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,UAAS,MAAKS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GA0BtB,OAxBAzD,EAAAA,EAAAA,YAAU,WACR,IAAM4D,EAAoBC,aAAaC,QAAQ,YAE/C,GAAKF,EAeE,CACL,IAAMG,EAAiBC,KAAKC,MAAML,GAClC,OAAOT,GAAgBe,EAAAA,EAAAA,GAAeH,GACxC,CAjBE,IAAMI,EAAa,eAAArD,GAAAsD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEC,OAFDF,EAAAC,KAAA,EAElBrB,GAAa,GAAMoB,EAAAE,KAAA,GACAC,EAAAA,EAAAA,KAAkB,KAAD,EAA9BN,EAAIG,EAAAI,KACJN,EAAsBT,KAAKgB,WAAUd,EAAAA,EAAAA,GAAeM,IAC1DX,aAAaoB,QAAQ,WAAYR,GACjCtB,GAAgBe,EAAAA,EAAAA,GAAeM,IAAOG,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEtChB,EAASgB,EAAAO,GAAMC,SAAS,QAEJ,OAFIR,EAAAC,KAAA,GAExBrB,GAAa,GAAOoB,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAd,EAAA,yBAEvB,kBAZkB,OAAAzD,EAAAwE,MAAA,KAAAC,UAAA,KAanBpB,GAKJ,GAAG,KAGDlE,EAAAA,EAAAA,MAAAuF,EAAAA,SAAA,CAAAtF,SAAA,CACGoD,IAAanD,EAAAA,EAAAA,KAACsF,EAAAA,EAAM,IACpB/B,IAASvD,EAAAA,EAAAA,KAAAqF,EAAAA,SAAA,CAAAtF,SAAGwD,EAAMyB,UAClBpE,IAAiBuC,IAChBnD,EAAAA,EAAAA,KAACU,EAAa,CAACE,aAAcA,MAIrC,E,8BCLA,MAhCA,WACE,OACEd,EAAAA,EAAAA,MAACK,EAAa,CAAAJ,SAAA,EACZD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBF,SAAA,EAC/BD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACM,EAAU,CAACmF,GAAG,QAAOxF,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMF,UACnBC,EAAAA,EAAAA,KAACwF,EAAAA,EAAQ,CAACvF,UAAU,iBAEtBD,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAERD,EAAAA,EAAAA,MAACM,EAAU,CAACmF,GAAG,aAAYxF,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMF,UACnBC,EAAAA,EAAAA,KAACyF,EAAAA,EAAY,CAACxF,UAAU,iBAE1BD,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iBAEP2F,OAAOC,WAAa,MACnB3F,EAAAA,EAAAA,KAAA,UAAQ4F,KAAK,GAAG3F,UAAU,OAAMF,UAC9BC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAuB,CAAC5F,UAAU,qBAIzCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBF,UAChCC,EAAAA,EAAAA,KAAC8F,EAAO,UAGZ9F,EAAAA,EAAAA,KAAC+F,EAAQ,MAGf,C,4FCrCaC,EAAsB,CACjC,CAAEC,GAAI,OAAQC,KAAM,OAAQzD,MAAO,QACnC,CAAEwD,GAAI,OAAQC,KAAM,OAAQzD,MAAO,UACnC,CAAEwD,GAAI,WAAYC,KAAM,WAAYzD,MAAO,QAC3C,CAAEwD,GAAI,UAAWC,KAAM,UAAWzD,MAAO,QACzC,CACEwD,GAAI,MACJC,KAAM,MACNzD,MAAO,QAET,CAAEwD,GAAI,UAAWC,KAAM,GAAIzD,MAAO,W,SCRvBsB,EAAiB,SAAAM,GAU5B,OATiBA,EAAK8B,QAAO,SAAAtE,GAC3B,IAAMuE,EACmB,MAAvBvE,EAAKN,eAAgD,MAAvBM,EAAKwE,cAC/BC,EACmB,MAAvBzE,EAAKN,eAAgD,MAAvBM,EAAKwE,cAErC,OAAQD,GAAkBE,IAAmBzE,CAC/C,GAGF,EAUA,SAAS0E,EAAWC,GAClB,IAAMC,EAAU,IAAIC,KAAKF,GACnBG,EAAMC,OAAOH,EAAQI,WAAWC,SAAS,EAAG,KAC5CC,EAAQH,OAAOH,EAAQO,WAAa,GAAGF,SAAS,EAAG,KACnDG,EAAOL,OAAOH,EAAQS,eAAeC,OAAO,GAClD,MAAM,GAANC,OAAUT,EAAG,KAAAS,OAAIL,EAAK,KAAAK,OAAIH,EAC5B,CAEO,IAAMI,EAAoB,SAAH1G,GAAsC,IAAhC2G,EAAY3G,EAAZ2G,aAAcC,EAAU5G,EAAV4G,WAChD,OAAKD,EAEe,CAChBE,QAASxB,EACTyB,KAAkB,OAAZH,QAAY,IAAZA,OAAY,EAAZA,EAAcrG,KAAI,SAAAY,GACtB,IAAM6F,EAAsBH,EAAWlG,MACrC,SAAAsG,GAAC,OAAIA,EAAE1B,KAAOpE,EAAK+F,UAAU,IAGzBC,EAAyB,WAAdhG,EAAK+D,KAEhBkC,EAAWD,EACb,CAAEE,MAAO,UAAWC,WAAY,KAChC,CAAED,MAAO,UAAWC,WAAY,KAE9BC,EAAkBJ,EACpBhG,EAAKqG,OACLC,KAAKC,IAAIvG,EAAKqG,OAAOhI,QAAQ,IACjC,OAAAmI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKxG,GAAI,IACPyG,SAAUZ,EACNA,EAAoBxB,KACpBrE,EAAK+F,WACTpB,KAAMD,EAAW1E,EAAK0G,iBACtB3C,KAAoB,WAAd/D,EAAK+D,KAAoB,IAAM,IACrC4C,KAAKxI,EAAAA,EAAAA,KAAA,QAAMyI,MAAOX,EAAS/H,SAAEkI,KAEjC,UA3Be,CAgCrB,C","sources":["components/Container/StyledContainer.js","components/Balance/StyledBalance.js","components/Balance/Balance.jsx","components/SideBar/StyledSideBar.js","components/CurrencyTable/StyledTable.js","components/CurrencyTable/StyledWrapperCurrency.js","components/CurrencyTable/CurrencyTable.jsx","components/Currency/Currency.jsx","components/SideBar/SideBar.jsx","data/data.js","helpers/helpers.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n  display: flex;\n  //gap: 69px;\n  width: 100%;\n  max-width: 1280px;\n  justify-content: space-between;\n\n  @media (min-width: 768px) and (max-width: 1280px) {\n    flex-direction: column;\n    min-width: 768px;\n    max-width: 1279px;\n    align-items: center;\n    padding: 0 32px;\n  }\n\n  @media (min-width: 320px) and (max-width: 767px) {\n    min-width: 320px;\n    max-width: 767px;\n    flex-direction: column;\n  }\n`;\n\nexport const SideBarHide = styled.div`\n  @media (min-width: 320px) and (max-width: 767px) {\n    .balance-invisible {\n      display: none;\n    }\n  }\n`;\n\nexport default StyledContainer;\n","import styled from 'styled-components';\n\nexport const StyledBalance = styled.div`\n  padding: 8px 0 11px 56px;\n  background: rgba(82, 59, 126, 0.6);\n  box-shadow: 1px 9px 15px 0px rgba(0, 0, 0, 0.2);\n  margin-bottom: 32px;\n\n  .balance {\n    color: var(--white, #fbfbfb);\n    font-size: 30px;\n    font-weight: 700;\n    line-height: normal;\n\n    margin: 0;\n  }\n\n  .title-balance {\n    color: var(--white-40, rgba(255, 255, 255, 0.4));\n    font-size: 12px;\n    font-weight: 400;\n    line-height: normal;\n    text-transform: uppercase;\n    margin: 0 0 12px 0;\n  }\n\n  @media (min-width: 320px) and (max-width: 767px) {\n    font-size: 36px;\n    width: 280px;\n    padding-left: 32px;\n    border-radius: 8px;\n\n    .balance {\n      padding: 0;\n    }\n  }\n\n  @media (min-width: 768px) and (max-width: 1280px) {\n    width: 336px;\n    padding-left: 40px;\n    border-radius: 8px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectBalance } from 'redux/selectors';\nimport { StyledBalance } from './StyledBalance';\n\nfunction Balance() {\n  const balance = useSelector(selectBalance);\n\n  useEffect(() => {}, [balance]);\n\n  return (\n    <StyledBalance>\n      <h2 className=\"title-balance\">Your balance</h2>\n      <p className=\"balance\">â‚´ {balance.toFixed(2)}</p>\n    </StyledBalance>\n  );\n}\n\nexport default Balance;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledSideBar = styled.div`\n  border-right: 1px solid var(--white-60);\n  color: #fbfbfb;\n\n  width: 100%;\n  max-width: 480px;\n  height: 641px;\n\n  nav {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    height: 134px;\n    padding: 40px 0 16px 28px;\n    box-sizing: border-box;\n  }\n\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 28px;\n    height: 28px;\n    border-radius: 5px;\n    border: none;\n    background: transparent;\n    color: rgba(255, 255, 255, 0.4);\n  }\n\n  @media (min-width: 768px) and (max-width: 1280px) {\n    border-right: none;\n    display: flex;\n    flex-direction: row;\n    max-width: 704px;\n    height: 214px;\n\n    .area-nav-balance {\n      display: flex;\n      flex-direction: column;\n    }\n\n    nav {\n      height: 214px;\n      padding-bottom: 0;\n      font-size: 18px;\n      margin-bottom: 28px;\n    }\n  }\n  @media (min-width: 320px) and (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    height: 148px;\n    border-right: none;\n    margin-left: auto;\n    margin-right: auto;\n    align-items: center;\n\n    nav {\n      display: flex;\n      flex-direction: row;\n      gap: 12px;\n      height: 68px;\n      padding: 12px 0;\n      box-sizing: border-box;\n      justify-content: center;\n      align-items: center;\n    }\n    span {\n      display: none;\n    }\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: var(--white);\n  display: flex;\n  gap: 20px;\n  align-items: flex-end;\n\n  .wrap {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 28px;\n    height: 28px;\n    border-radius: 5px;\n  }\n\n  .icon-home {\n    fill: rgba(255, 255, 255, 0.4);\n  }\n\n  .icon-money {\n    fill: rgba(255, 255, 255, 0.4);\n  }\n\n  .icon-diag {\n    fill: rgba(255, 255, 255, 0.4);\n  }\n\n  &.active {\n    font-weight: bold;\n  }\n\n  &.active .wrap {\n    background: #734aef;\n\n    filter: drop-shadow(0px 3px 10px rgba(74, 86, 226, 0.5));\n  }\n\n  @media (min-width: 320px) and (max-width: 767px) {\n    .wrap {\n      width: 44px;\n      height: 44px;\n    }\n    .button {\n      width: 44px;\n      height: 44px;\n    }\n  }\n`;\n","import { TableContainer } from '@mui/material';\nimport { styled } from 'styled-components';\nimport bgCurrency from '../../assets/images/currency_desktop@1x.png';\n\nexport const StyledTableContainer = styled(TableContainer)`\n  width: 100%;\n  color: var(--white);\n  margin-bottom: 36px;\n\n  @media (max-width: 1280px) {\n    margin-bottom: -5px;\n\n    .th-currency {\n      padding: 12px 0 12px 50px;\n    }\n    .th-purshase {\n      padding-right: 20px;\n    }\n    td {\n      padding: 12px 0 0 35px;\n    }\n  }\n\n  .th-currency {\n    padding: 16px 0 16px 50px;\n  }\n  .th-purshase {\n    padding-left: 0;\n    padding-right: 28px;\n  }\n  .td-purshase {\n    padding-left: 0;\n    padding-right: 40px;\n  }\n  .td-sell {\n    padding-left: 0;\n    width: 200px;\n  }\n\n  th {\n    color: var(--white);\n    font-size: 16px;\n    font-family: 'PoppinsRegular';\n    border: none;\n    font-weight: 600;\n    line-height: normal;\n    background: rgba(255, 255, 255, 0.2);\n  }\n\n  tr {\n    border: none;\n  }\n\n  td {\n    color: var(--white);\n    font-size: 16px;\n    font-family: 'PoppinsRegular';\n    padding: 24px 0 0 35px;\n    line-height: normal;\n    border: none;\n    width: 160px;\n  }\n`;\n\nexport const StyledWrapperDiagramm = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 480px;\n  height: 183px;\n  background-image: url(${bgCurrency});\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  @media (min-width: 768px) and (max-width: 1280px) {\n    max-width: 336px;\n    height: 70px;\n\n    .currencyUSD {\n      display: none;\n    }\n    .currencyEUR {\n      display: none;\n    }\n  }\n\n  @media (min-width: 320px) and (max-width: 767px) {\n    display: none;\n  }\n\n  .currencyUSD {\n    position: absolute;\n    left: 12%;\n    top: 7%;\n    font-family: 'PoppinsRegular';\n    font-size: 12px;\n    color: var(--dashboard-out-text);\n  }\n\n  .currencyEUR {\n    position: absolute;\n    right: 101px;\n    top: -21px;\n    font-family: 'PoppinsRegular';\n    font-size: 12px;\n    color: var(--dashboard-out-text);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledWrapperCurrency = styled.div`\n  @media (max-width: 1280px) {\n    width: 100%;\n    max-width: 336px;\n    margin-left: auto;\n  }\n\n  @media (min-width: 320px) and (max-width: 767px) {\n    display: none;\n  }\n`;\n","import {\n  TableHead,\n  Paper,\n  TableCell,\n  Table,\n  TableBody,\n  TableRow,\n} from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { StyledTableContainer, StyledWrapperDiagramm } from './StyledTable';\nimport { StyledWrapperCurrency } from './StyledWrapperCurrency';\n\nexport const CurrencyTable = ({ dataCurrency }) => {\n  const nameCurrencies = { USD: 840, EUR: 978 };\n\n  const tableRows = dataCurrency.map(currency => ({\n    currency: Object.keys(nameCurrencies).find(\n      key => nameCurrencies[key] === currency.currencyCodeA\n    ),\n    purchase: currency.rateBuy.toFixed(2),\n    sale: currency.rateSell.toFixed(2),\n  }));\n\n  const usdCurr = dataCurrency.find(item => item.currencyCodeA === 840);\n  const eurCurr = dataCurrency.find(item => item.currencyCodeA === 978);\n\n  // const screenWidth = window.innerWidth;\n\n  return (\n    <StyledWrapperCurrency className=\"currency-area\">\n      <StyledTableContainer\n        component={Paper}\n        sx={{ background: 'transparent', boxShadow: 'none' }}\n      >\n        <Table sx={{ width: '100%' }}>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"th-currency\" align=\"center\">\n                Currency\n              </TableCell>\n              <TableCell className=\"th-purshase\" align=\"center\">\n                Purchase\n              </TableCell>\n              <TableCell className=\"td-sell\" align=\"left\">\n                Sale\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableRows.map(row => (\n              <TableRow key={row.currency}>\n                <TableCell align=\"center\">{row.currency}</TableCell>\n                <TableCell align=\"center\" className=\"td-purshase\">\n                  {row.purchase}\n                </TableCell>\n                <TableCell align=\"left\" className=\"td-sell\">\n                  {row.sale}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </StyledTableContainer>\n      <StyledWrapperDiagramm>\n        <p className=\"currencyUSD\">{usdCurr.rateSell.toFixed(2)}</p>\n        <p className=\"currencyEUR\">{eurCurr.rateSell.toFixed(2)}</p>\n      </StyledWrapperDiagramm>\n    </StyledWrapperCurrency>\n  );\n};\n\nCurrencyTable.propTypes = {\n  dataCurrency: PropTypes.arrayOf(\n    PropTypes.shape({\n      currencyCodeA: PropTypes.number.isRequired,\n      currencyCodeB: PropTypes.number.isRequired,\n      date: PropTypes.number.isRequired,\n      rateBuy: PropTypes.number.isRequired,\n      rateCross: PropTypes.number.isRequired,\n      rateSell: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { requestCurrency } from 'Api/api';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport Loader from 'components/Loader/Loader';\nimport { handleCurrency } from 'helpers/helpers';\nimport { useEffect, useState } from 'react';\n\nfunction Currency() {\n  const [dataCurrency, setDataCurrency] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const localDataCurrency = localStorage.getItem('currency');\n\n    if (!localDataCurrency) {\n      const fetchCurrency = async () => {\n        try {\n          setIsLoading(true);\n          const data = await requestCurrency();\n          const stringifiedCurrency = JSON.stringify(handleCurrency(data));\n          localStorage.setItem('currency', stringifiedCurrency);\n          setDataCurrency(handleCurrency(data));\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchCurrency();\n    } else {\n      const parsedCurrency = JSON.parse(localDataCurrency);\n      return setDataCurrency(handleCurrency(parsedCurrency));\n    }\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <>{error.message}</>}\n      {dataCurrency && !isLoading && (\n        <CurrencyTable dataCurrency={dataCurrency} />\n      )}\n    </>\n  );\n}\n\nexport default Currency;\n","import Balance from 'components/Balance/Balance';\nimport { StyledLink, StyledSideBar } from './StyledSideBar';\nimport Currency from 'components/Currency/Currency';\nimport HomeIcon from '@mui/icons-material/Home';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport AttachMoneyOutlinedIcon from '@mui/icons-material/AttachMoneyOutlined';\n\nfunction SideBar() {\n  return (\n    <StyledSideBar>\n      <div className=\"area-nav-balance\">\n        <nav>\n          <StyledLink to=\"/home\">\n            <div className=\"wrap\">\n              <HomeIcon className=\"icon-home\" />\n            </div>\n            <span>Home</span>\n          </StyledLink>\n          <StyledLink to=\"/statistic\">\n            <div className=\"wrap\">\n              <TimelineIcon className=\"icon-diag\" />\n            </div>\n            <span>Statistic</span>\n          </StyledLink>\n          {window.innerWidth < 768 && (\n            <button type=\"\" className=\"wrap\">\n              <AttachMoneyOutlinedIcon className=\"icon-money\" />\n            </button>\n          )}\n        </nav>\n        <div className=\"balance-invisible\">\n          <Balance />\n        </div>\n      </div>\n      <Currency />\n    </StyledSideBar>\n  );\n}\n\nexport default SideBar;\n","export const columnsDashboardTab = [\n  { id: 'date', name: 'Date', align: 'left' },\n  { id: 'type', name: 'Type', align: 'center' },\n  { id: 'category', name: 'Category', align: 'left' },\n  { id: 'comment', name: 'Comment', align: 'left' },\n  {\n    id: 'sum',\n    name: 'Sum',\n    align: 'left',\n  },\n  { id: 'actions', name: '', align: 'center' },\n];\n","import { columnsDashboardTab } from 'data/data';\n\nexport const handleCurrency = data => {\n  const currency = data.filter(item => {\n    const isRateUahToUSD =\n      item.currencyCodeA === 840 && item.currencyCodeB === 980;\n    const isRateUahToEUR =\n      item.currencyCodeA === 978 && item.currencyCodeB === 980;\n\n    return (isRateUahToUSD || isRateUahToEUR) && item;\n  });\n\n  return currency;\n};\n\n// const makerFormatDate = date => {\n//   const partsDate = date.split('-');\n//   const formattedDate = `${partsDate[2]}.${\n//     partsDate[1]\n//   }.${partsDate[0].substring(2, 4)}`;\n//   return formattedDate;\n// };\n\nfunction formatDate(date) {\n  const dateObj = new Date(date);\n  const day = String(dateObj.getDate()).padStart(2, '0');\n  const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n  const year = String(dateObj.getFullYear()).slice(-2);\n  return `${day}.${month}.${year}`;\n}\n\nexport const makerDashboardTab = ({ transactions, categories }) => {\n  if (!transactions) return;\n  else {\n    const dataTable = {\n      columns: columnsDashboardTab,\n      rows: transactions?.map(item => {\n        const matchedNameCategory = categories.find(\n          e => e.id === item.categoryId\n        );\n\n        const isIncome = item.type === 'INCOME';\n\n        const sumStyle = isIncome\n          ? { color: '#FFB627', fontWeight: 600 }\n          : { color: '#FF868D', fontWeight: 600 };\n\n        const formattedAmount = isIncome\n          ? item.amount\n          : Math.abs(item.amount.toFixed(2));\n        return {\n          ...item,\n          category: matchedNameCategory\n            ? matchedNameCategory.name\n            : item.categoryId,\n          date: formatDate(item.transactionDate),\n          type: item.type === 'INCOME' ? '+' : '-',\n          sum: <span style={sumStyle}>{formattedAmount}</span>,\n        };\n      }),\n    };\n\n    return dataTable;\n  }\n};\n"],"names":["StyledContainer","styled","_templateObject","_taggedTemplateLiteral","SideBarHide","_templateObject2","StyledBalance","balance","useSelector","selectBalance","useEffect","_jsxs","children","_jsx","className","toFixed","StyledSideBar","StyledLink","NavLink","StyledTableContainer","TableContainer","StyledWrapperDiagramm","StyledWrapperCurrency","CurrencyTable","_ref","dataCurrency","nameCurrencies","USD","EUR","tableRows","map","currency","Object","keys","find","key","currencyCodeA","purchase","rateBuy","sale","rateSell","usdCurr","item","eurCurr","component","Paper","sx","background","boxShadow","Table","width","TableHead","TableRow","TableCell","align","TableBody","row","_useState","useState","_useState2","_slicedToArray","setDataCurrency","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","localDataCurrency","localStorage","getItem","parsedCurrency","JSON","parse","handleCurrency","fetchCurrency","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","stringifiedCurrency","wrap","_context","prev","next","requestCurrency","sent","stringify","setItem","t0","message","finish","stop","apply","arguments","_Fragment","Loader","to","HomeIcon","TimelineIcon","window","innerWidth","type","AttachMoneyOutlinedIcon","Balance","Currency","columnsDashboardTab","id","name","filter","isRateUahToUSD","currencyCodeB","isRateUahToEUR","formatDate","date","dateObj","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","slice","concat","makerDashboardTab","transactions","categories","columns","rows","matchedNameCategory","e","categoryId","isIncome","sumStyle","color","fontWeight","formattedAmount","amount","Math","abs","_objectSpread","category","transactionDate","sum","style"],"sourceRoot":""}