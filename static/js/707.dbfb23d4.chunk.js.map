{"version":3,"file":"static/js/707.dbfb23d4.chunk.js","mappings":"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","sources":["hooks/selectedCategories.js","components/Table/StyledTable.js","components/Table/Table.jsx","components/Chart/StyledChart.js","components/Chart/Chart.jsx","components/DiagramSelect/StyledDiagramSelect.js","components/DiagramSelect/DiagramSelect.jsx","components/DiagramTab/StyledDiagramTab.js","components/DiagramTab/DiagramTab.jsx","pages/SummaryPage/SummaryPage.jsx"],"sourcesContent":["export const useCategoriesType = value => {\n    const expenseCategories = value.filter(\n        category => category.type === 'EXPENSE'\n    );\n    const incomeCategories = value.filter(category => category.type === 'INCOME');\n\n    return [expenseCategories, incomeCategories];\n};","import styled from 'styled-components';\n\nexport const WrapperTable = styled.table`\n  width:100%;\n  max-width: 280px;\n  display: flex;\n  flex-direction: column;\n\n  margin-top: 20px;\n  @media only screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n  @media only screen and (min-width: 1279px) {\n    max-width: 395px;\n  }\n`;\n\nexport const StyledThead = styled.thead`\n  tr {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 16px;\n  }\nwidth: 100%;\n  max-width: 280px;\n  height: 56px;\n\n  background: var(--balance-bg);\n  box-shadow: var(--form-shadow);\n  backdrop-filter: blur(50px);\n\n  border-radius: 8px;\n\n  @media only screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n  @media only screen and (min-width: 1279px) {\n    max-width: 395px;\n  }\n`;\n\nexport const StyledTr = styled.tr`\npadding: 0 16px;\n`;\n\nexport const StyledTbody = styled.tbody`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 16px 0;\n  gap: 14px;\n\n  tr {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-bottom: 1px solid var(--white-60);\n    display: flex;\n    justify-content: space-between;\n    padding-bottom: 16px;\n  }\n`;\n\nexport const StyledIcon = styled.td`\n\n width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  margin-left: 16px;\n`;\n\nexport const StyledText = styled.td`\n  margin-left: 16px;\n  margin-right: auto;\n  font-size: 14px;\n`;\n\nexport const StyledSum = styled.td`\n  margin-right: 16px;\n  font-size: 14px;\n`;\n\nexport const StyledTotalWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n`;\n\nexport const StyledP = styled.p`\n  font-size: 14px;\n  font-weight: 600;\n  display: flex;\n  justify-content: space-between;\n  margin-left: 16px;\n`;\n\nexport const StyledSpanExpenses = styled.span`\n  color: var(--dashboard-out-text);\n  margin-right: 16px;\n`;\nexport const StyledSpanIncome = styled.span`\n  color: var(--dashboard-in-text);\n  margin-right: 16px;\n`;","import { useCategoriesType } from 'hooks/selectedCategories';\nimport { useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  selectExpenseSummary,\n  selectIncomeSummary,\n  selectSummary,\n} from 'redux/selectors';\nimport {\n  StyledIcon,\n  StyledP,\n  StyledSpanExpenses,\n  StyledSpanIncome,\n  StyledSum,\n  StyledTbody,\n  StyledText,\n  StyledThead,\n  StyledTotalWrapper,\n  StyledTr,\n  WrapperTable,\n} from './StyledTable';\n\nexport const colors = [\n  '#0D1282',\n  '#D71313',\n  '#F86F03',\n  '#F0DE36',\n  '#1A5D1A',\n  '#525FE1',\n  '#FF55BB',\n  '#5C469C',\n  '#C07F00',\n  '#009FBD',\n  '#77037B',\n  '#00FFCA',\n  '#E21818',\n  '#16FF00',\n];\n\nexport const Table = () => {\n  const summary = useSelector(selectSummary);\n  const [expenseCategories] = useCategoriesType(summary);\n  const incomeSummary = useSelector(selectIncomeSummary);\n  const expenseSummary = useSelector(selectExpenseSummary);\n\n  return (\n    <div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={1500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n      <WrapperTable>\n        <StyledThead>\n          <StyledTr>\n            <th>Category</th>\n            <th>Sum</th>\n          </StyledTr>\n        </StyledThead>\n        <StyledTbody>\n          {expenseCategories.map((el, idx) => (\n            <tr key={el.name}>\n              <StyledIcon\n                style={{\n                  backgroundColor: colors[idx % colors.length],\n                }}\n              ></StyledIcon>\n              <StyledText>{el.name}</StyledText>\n              <StyledSum>{Number(el.total).toFixed(2) * 1}</StyledSum>\n            </tr>\n          ))}\n        </StyledTbody>\n      </WrapperTable>\n      <StyledTotalWrapper>\n        <StyledP>\n          Expenses:\n          <StyledSpanExpenses>\n            {Number(expenseSummary).toFixed(2) * 1}\n          </StyledSpanExpenses>\n        </StyledP>\n        <StyledP>\n          Income:\n          <StyledSpanIncome>\n            {Number(incomeSummary).toFixed(2) * 1}\n          </StyledSpanIncome>\n        </StyledP>\n      </StyledTotalWrapper>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ChartWrapper = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n  height:100%;\n  max-width: 280px;\n  max-height: 280px;\n  @media only screen and (min-width: 768px) {\n    max-width: 336px;\n    max-height: 336px;\n  }\n  @media only screen and (min-width: 1279px) {\n    max-width: 288px;\n    max-height: 288px;\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  position: absolute;\n  display: flex;\n  top: 50%;\n  left: 50%;\n\n  transform: translate(-50%, -50%);\n`;","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { colors } from 'components/Table/Table';\nimport { useCategoriesType } from 'hooks/selectedCategories';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { selectBalance, selectSummary } from 'redux/selectors';\nimport { ChartWrapper, StyledSpan } from './StyledChart';\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const Chart = () => {\n  const balance = useSelector(selectBalance);\n  const summary = useSelector(selectSummary);\n  const [expenseCategories] = useCategoriesType(summary);\n\n  const data = {\n    labels: [],\n    datasets: [\n      {\n        lable: '# of Votes',\n        data: !expenseCategories.length\n          ? [1]\n          : expenseCategories.map(item => item.total),\n        backgroundColor: colors,\n        borderColor: colors,\n        cutout: '75%',\n        hoverOffset: 2,\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  return (\n    <ChartWrapper>\n      <Doughnut data={data} options={options}></Doughnut>\n      <StyledSpan>₴ {balance.toFixed(2)}</StyledSpan>\n    </ChartWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { SlArrowDown } from 'react-icons/sl';\n\nconst breakpoints = {\n    tablet: `@media only screen and (min-width: 768px)`,\n    desktop: `@media only screen and (min-width: 1279px)`,\n};\n\nexport const StyledSelectWrapper = styled.div`\nwidth: 100%;\n  max-width: 280px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 32px;\n\n  @media only screen and (min-width: 768px) {\n    max-width: 336px;\n    flex-direction: row;\n    justify-content: space-between;\n    gap: 16px;\n    margin-top: 0;\n  }\n\n  @media only screen and (min-width: 1279px) {\n    max-width: 395px;\n    flex-direction: row;\n  }\n`;\n//----------------------------------------------\nexport const selectStyles = {\n    control: styles => ({\n        ...styles,\n        width: '280px',\n        height: '50px',\n        padding: '12px 20px',\n        fontSize: '16px',\n        color: 'var(--white)',\n        backgroundColor: 'rgba(74, 86, 226, 0.10)',\n        border: '1px solid var(--white-60)',\n        borderRadius: '8px',\n        cursor: 'pointer',\n        [breakpoints.tablet]: {\n            width: '160px',\n        },\n        [breakpoints.desktop]: {\n            width: '182px',\n        },\n    }),\n    valueContainer: styles => ({ ...styles, padding: '0', margin: '0' }),\n    indicatorSeparator: styles => ({ ...styles, display: 'none' }),\n    dropdownIndicator: (styles, state) => ({\n        ...styles,\n        padding: '0',\n        transition: 'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n        transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : null,\n    }),\n    singleValue: styles => ({ ...styles, margin: '0', color: 'var(--white)' }),\n    input: styles => ({ ...styles, padding: '0', margin: '0' }),\n    menu: styles => ({\n        ...styles,\n        top: '90%',\n        width: '100%',\n        maxWidth: '280px',\n        height: '157px',\n        borderRadius: '8px',\n        background: 'var(--small-form-color)',\n        backdropFilter: `blur(50px)`,\n        overflow: 'auto',\n        [breakpoints.tablet]: {\n            width: '160px',\n        },\n        [breakpoints.desktop]: {\n            width: '182px',\n        },\n    }),\n    menuList: styles => ({\n        ...styles,\n        width: '100%',\n        maxWidth: '280px',\n        height: '157px',\n        [breakpoints.tablet]: {\n            maxWidth: '160px',\n        },\n        [breakpoints.desktop]: {\n            maxWidth: '182px',\n        },\n        '::-webkit-scrollbar': {\n            width: '7px',\n            height: '0px',\n            borderRadius: '8px',\n        },\n        '::-webkit-scrollbar-track': {\n            backgroundColor: 'var(--form-color)',\n        },\n        '::-webkit-scrollbar-thumb': {\n            backgroundColor: 'var(--violet)',\n        },\n        '::-webkit-scrollbar-thumb:hover': {\n            backgroundColor: 'var(--white-button-text)',\n        },\n    }),\n    option: (styles, state) => ({\n        ...styles,\n        cursor: 'pointer',\n        color: state.isSelected ? 'var(--dashboard-out-text)' : null,\n        backgroundColor: state.isSelected ? 'var(--form-color)' : null,\n        ':hover': {\n            color: 'var(--dashboard-out-text)',\n            backgroundColor: 'var(--form-color)',\n        },\n    }),\n};\n\nexport const SelectIcon = styled(SlArrowDown)`\n  color: ${({ theme }) => theme.colors.primaryFont};\n  width: 30px;\n  height: 20px;\n`;","import { notifyEmptySummary } from 'components/Toastify/Toastify';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Select from 'react-select';\nimport { getTransSumThunk } from 'redux/Thunks/TransactionsSumThunk';\n//import { selectSummary } from 'redux/selectors';\nimport { StyledSelectWrapper, selectStyles } from './StyledDiagramSelect';\n\nconst optionsMonth = [\n  { value: '1', label: 'January' },\n  { value: '2', label: 'February' },\n  { value: '3', label: 'March' },\n  { value: '4', label: 'April' },\n  { value: '5', label: 'May' },\n  { value: '6', label: 'June' },\n  { value: '7', label: 'July' },\n  { value: '8', label: 'August' },\n  { value: '9', label: 'September' },\n  { value: '10', label: 'October' },\n  { value: '11', label: 'November' },\n  { value: '12', label: 'December' },\n];\nconst optionsYear = [\n  { value: '2023', label: '2023' },\n  { value: '2022', label: '2022' },\n  { value: '2021', label: '2021' },\n  { value: '2020', label: '2020' },\n  { value: '2019', label: '2019' },\n  { value: '2018', label: '2018' },\n  { value: '2017', label: '2017' },\n  { value: '2016', label: '2016' },\n  { value: '2015', label: '2015' },\n  { value: '2014', label: '2014' },\n  { value: '2013', label: '2013' },\n  { value: '2012', label: '2012' },\n  { value: '2011', label: '2011' },\n  { value: '2010', label: '2010' },\n];\n\nexport const DiagramSelect = () => {\n  //const summary = useSelector(selectSummary);\n  const dispatch = useDispatch();\n  const date = new Date();\n  let options = { month: 'long' };\n  const currentMonth = {\n    value: date.getMonth(),\n    label: date.toLocaleDateString('en-US', options),\n  };\n\n  const currentYear = {\n    value: date.getFullYear(),\n    label: date.getFullYear(),\n  };\n  const [month, setMonth] = useState(date.getMonth() + 1);\n  const [year, setYear] = useState(date.getFullYear());\n\n  useEffect(() => {\n    dispatch(getTransSumThunk({ month: Number(month), year: Number(year) }))\n      .unwrap()\n      .then(({ categoriesSummary }) => {\n        if (!categoriesSummary?.length) {\n          notifyEmptySummary();\n          console.log('NOTIFICATION');\n        }\n      });\n  }, [dispatch, month, year]);\n\n  const handleSelectMonth = event => {\n    setMonth(event.value);\n  };\n\n  const handleSelectYear = event => {\n    setYear(event.value);\n  };\n\n  return (\n    <StyledSelectWrapper>\n      <Select\n        options={optionsMonth}\n        onChange={handleSelectMonth}\n        styles={selectStyles}\n        nameOfSelect={'month'}\n        defaultValue={currentMonth}\n      />\n      <Select\n        options={optionsYear}\n        onChange={handleSelectYear}\n        styles={selectStyles}\n        nameOfSelect={'year'}\n        defaultValue={currentYear}\n      />\n    </StyledSelectWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: center;\n    gap: 32px;\n    padding: 0 0 45px 0;\n  }\n\n`;\n\nexport const StyledWrapperLeft = styled.div`\nwidth: 100%;\n  max-width: 280px;\n`;\n\nexport const StyledWrapperRight = styled.div`\nwidth: 100%;\n  max-width: 280px;\n  @media only screen and (min-width: 768px){\n    max-width: 336px;\n  }\n  @media only screen and (min-width: 1279px) {\n    max-width: 395px;\n  }\n`;\nexport const StyledTitle = styled.h1`\n  font-size: 30px;\n  font-weight: 400;\n  //margin-left: 20px;\n  margin-top: 40px;\n  margin-bottom: 8px;\n  text-align: center;\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-bottom: 20px;\n    margin-left: 20px;\n    text-align: unset;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 32px;\n  }\n`;","import { Chart } from 'components/Chart/Chart';\nimport { DiagramSelect } from 'components/DiagramSelect/DiagramSelect';\nimport { Table } from 'components/Table/Table';\nimport {\n  StyledWrapperLeft,\n  StyledWrapperRight,\n  Wrapper,\n} from './StyledDiagramTab';\n\nfunction DiagramTab() {\n  return (\n    <>\n      <Wrapper>\n        <StyledWrapperLeft>\n          <Chart />\n        </StyledWrapperLeft>\n        <StyledWrapperRight>\n          <DiagramSelect></DiagramSelect>\n          <Table />\n        </StyledWrapperRight>\n      </Wrapper>\n    </>\n  );\n}\n\nexport default DiagramTab;\n","import StyledContainer, {\n  SideBarHide,\n} from 'components/Container/StyledContainer';\nimport DiagramTab from 'components/DiagramTab/DiagramTab';\nimport { StyledTitle } from 'components/DiagramTab/StyledDiagramTab';\nimport SideBar from 'components/SideBar/SideBar';\n\nfunction SummaryPage() {\n  return (\n    <StyledContainer>\n      <SideBarHide>\n        <SideBar />\n      </SideBarHide>\n      <div>\n        <StyledTitle>Statistics</StyledTitle>\n        <DiagramTab />\n      </div>\n    </StyledContainer>\n  );\n}\n\nexport default SummaryPage;\n"],"names":["useCategoriesType","value","filter","category","type","WrapperTable","styled","_templateObject","_taggedTemplateLiteral","StyledThead","_templateObject2","StyledTr","_templateObject3","StyledTbody","_templateObject4","StyledIcon","_templateObject5","StyledText","_templateObject6","StyledSum","_templateObject7","StyledTotalWrapper","_templateObject8","StyledP","_templateObject9","StyledSpanExpenses","_templateObject10","StyledSpanIncome","_templateObject11","colors","Table","summary","useSelector","selectSummary","_useCategoriesType","expenseCategories","_slicedToArray","incomeSummary","selectIncomeSummary","expenseSummary","selectExpenseSummary","_jsxs","children","_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","map","el","idx","style","backgroundColor","length","name","Number","total","toFixed","ChartWrapper","StyledSpan","ChartJS","ArcElement","Tooltip","Legend","Chart","balance","selectBalance","data","labels","datasets","lable","item","borderColor","cutout","hoverOffset","Doughnut","options","plugins","legend","display","breakpoints","StyledSelectWrapper","selectStyles","control","styles","_objectSpread2","_objectSpread","width","height","padding","fontSize","color","border","borderRadius","cursor","_defineProperty","valueContainer","margin","indicatorSeparator","dropdownIndicator","state","transition","transform","selectProps","menuIsOpen","singleValue","input","menu","_objectSpread3","top","maxWidth","background","backdropFilter","overflow","menuList","_objectSpread4","option","isSelected","optionsMonth","SlArrowDown","_ref","primaryFont","label","optionsYear","DiagramSelect","dispatch","useDispatch","date","Date","currentMonth","getMonth","toLocaleDateString","month","currentYear","getFullYear","_useState","useState","_useState2","setMonth","_useState3","_useState4","year","setYear","useEffect","getTransSumThunk","unwrap","then","categoriesSummary","notifyEmptySummary","console","log","Select","onChange","event","nameOfSelect","defaultValue","Wrapper","StyledWrapperLeft","StyledWrapperRight","StyledTitle","_Fragment","StyledContainer","SideBarHide","SideBar","DiagramTab"],"sourceRoot":""}