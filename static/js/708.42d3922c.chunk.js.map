{"version":3,"file":"static/js/708.42d3922c.chunk.js","mappings":"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","sources":["pages/RegistrationPage/RegistrationPageStyled.js","components/RegistrationForm/RegistrationFormStyled.js","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx","../node_modules/@mui/icons-material/Person.js"],"sourcesContent":["import styled from 'styled-components';\nimport RegisterPicture from '../../assets/images/registration_desktop@1x.jpg';\n\nexport const RegistrationPageStyle = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-image: url(${RegisterPicture});\n  //background-color: rgba(255, 255, 255, 0.3);\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  border-radius: 0px;\n`;\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 533px;\n  height: 613px;\n  /* padding: 80px 62px; */  \n  border-radius: 14px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);  \n  background-color: var( --form-color);\n  \n\n  h3 {\n    margin: 0 auto;\n    color: var(--white);\n    font-size: 28px;\n    font-weight: 400;\n    line-height: 40px;\n  }\n  @media (max-width: 780px) {\n    padding: 23px 20px;\n    max-width: 280px;\n    //width: 533px;\n  }\n  \n`;\nexport const LogoStyle = styled.div`\n  width: 100%;\n  margin: 32px auto 32px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\n","import styled from 'styled-components'\n\nexport const InputBtnWrap = styled.div`\nwidth: 100%;\nmax-width: 410px;\nmargin: 0 auto;\n`\nexport const InputsWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 52px;\ngap: 40px;\n\ndiv{\n    height: 38px;\n}\n`\n\nexport const ButtonsBox = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  button {\n    width: 100%;\n    max-width: 300px;\n    height: 50px;\n    border-radius: 20px;\n    font-size: 18px;\n    text-transform: uppercase;\n    box-shadow: var(--button-shadow);\n    transition: transform 300ms ease-in;\n    border: transparent;\n\n    &:hover {\n      border: 1px solid rgba(74, 86, 226, 1);\n      transform: scale(1.02);\n    }\n  }\n  @media (max-width: 780px) {\n    button {\n      max-width: 280px;\n    }\n  }\n`;\nexport const ButtonActive = styled.button`\n  color: var(--white);\n  background-image: var(--button-gradient);\n`;\nexport const ButtonWhite = styled.button`\n  color: var(--white-button-text);\n  background-color: var(--white-button-bg);\n`;\n","import { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { registerUserThunk } from 'redux/Thunks/AuthUserThunk';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { IconButton, InputAdornment, TextField } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport HttpsIcon from '@mui/icons-material/Https';\nimport { notifyRegisterError } from 'components/Toastify/Toastify';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { useState } from 'react';\nimport {\n  InputBtnWrap,\n  InputsWrap,\n  ButtonsBox,\n  ButtonActive,\n  ButtonWhite,\n} from './RegistrationFormStyled';\n\nexport const RegistrationForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n  const dispatch = useDispatch();\n\n  const handlerOnSubmit = values => {\n    if (values.password === values.confirmPassword) {\n      const registerUserData = {\n        username: values.username,\n        email: values.email,\n        password: values.password,\n      };\n      dispatch(registerUserThunk(registerUserData));\n    } else {\n      notifyRegisterError();\n    }\n    //Form.reset();\n    //evt.currentTarget.reset();\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().min(6).max(12).required('Required'),\n  });\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      onSubmit={values => handlerOnSubmit(values)}\n      validationSchema={validationSchema}\n    >\n      {formik => (\n        <Form onSubmit={formik.handleSubmit}>\n          <InputBtnWrap>\n            <InputsWrap>\n              <TextField\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <PersonIcon sx={{ color: 'var(--white-40)' }} />\n                    </InputAdornment>\n                  ),\n                }}\n                sx={{ input: { color: 'var(--white)' } }}\n                autoFocus = {Boolean('true')}\n                color= 'secondary'\n                fullWidth = {Boolean('true')}\n                placeholder='Name'\n                variant=\"standard\"\n                label=\"Name\"\n                name=\"username\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                error={Boolean(formik.errors.username)}\n                helperText={formik.errors.username && 'Please enter your name'}\n              />\n              <TextField\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <EmailIcon sx={{ color: 'var(--white-40)' }} />\n                    </InputAdornment>\n                  ),\n                }}\n                sx={{ input: { color: 'var(--white)' } }}\n                color= 'secondary'\n                fullWidth = {Boolean('true')}\n                placeholder='Email'                \n                variant=\"standard\"\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                error={Boolean(formik.errors.email)}\n                helperText={\n                  formik.errors.email && 'Please enter a valid email address'\n                }\n              />\n\n              <TextField\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <HttpsIcon sx={{ color: 'var(--white-40)' }} />\n                    </InputAdornment>\n                  ),\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        sx={{ color: 'var(--white-40)' }}\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n                sx={{ input: { color: 'var(--white)' } }}\n                color= 'secondary'\n                fullWidth = {Boolean('true')}\n                placeholder='Password'\n                variant=\"standard\"\n                label=\"Password\"\n                name=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                onChange={formik.handleChange}\n                error={Boolean(formik.errors.password)}\n                helperText={\n                  formik.errors.password &&\n                  'Please enter your valid password (from 6 to 12 symbols)'\n                }\n              />\n\n              <TextField\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <HttpsIcon sx={{ color: 'var(--white-40)' }} />\n                    </InputAdornment>\n                  ),\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        sx={{ color: 'var(--white-40)' }}\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n                sx={{ input: { color: 'var(--white)' } }}\n                color= 'secondary'\n                fullWidth = {Boolean('true')}\n                placeholder='Confirm password'\n                variant=\"standard\"\n                label=\"Confirm password\"\n                name=\"confirmPassword\"\n                type={showPassword ? 'text' : 'password'}\n                onChange={formik.handleChange}\n                error={Boolean(formik.errors.confirmPassword)}\n                helperText={\n                  formik.errors.confirmPassword &&\n                  'Please enter your valid password'\n                }\n              />\n            </InputsWrap>\n\n            <ButtonsBox>\n              <ButtonActive type=\"submit\">Register</ButtonActive>\n\n              <Link to=\"/login\">\n                <ButtonWhite type=\"submit\">Log in</ButtonWhite>\n              </Link>\n            </ButtonsBox>\n          </InputBtnWrap>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import {\n  Container,\n  LogoStyle,\n  RegistrationPageStyle,\n} from './RegistrationPageStyled';\nimport { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport Logo from '../../assets/images/logo.svg';\n\nfunction RegisterPage() {\n  return (\n    <RegistrationPageStyle>      \n      <Container>        \n        <div>\n          <LogoStyle>\n            <img src={Logo} alt=\"Logo Wallet\" width=\"36px\" height=\"36px\" />\n            <h3>MoneyGuard</h3>\n          </LogoStyle>\n        </div>        \n        <RegistrationForm />\n      </Container>\n    </RegistrationPageStyle>\n  );\n}\n\nexport default RegisterPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\nexports.default = _default;"],"names":["RegistrationPageStyle","styled","_templateObject","_taggedTemplateLiteral","RegisterPicture","Container","_templateObject2","LogoStyle","_templateObject3","InputBtnWrap","InputsWrap","ButtonsBox","ButtonActive","_templateObject4","ButtonWhite","_templateObject5","RegistrationForm","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","dispatch","useDispatch","validationSchema","Yup","email","required","password","min","max","_jsx","Formik","initialValues","onSubmit","values","confirmPassword","registerUserData","username","registerUserThunk","notifyRegisterError","handlerOnSubmit","children","formik","Form","handleSubmit","_jsxs","TextField","InputProps","startAdornment","InputAdornment","position","PersonIcon","sx","color","input","autoFocus","Boolean","fullWidth","placeholder","variant","label","name","type","onChange","handleChange","error","errors","helperText","EmailIcon","HttpsIcon","endAdornment","IconButton","onClick","onMouseDown","Visibility","VisibilityOff","Link","to","src","Logo","alt","width","height","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}