{"version":3,"file":"static/js/893.c365fe22.chunk.js","mappings":"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","sources":["components/ButtonAddTransactions/StyledButtonAddTransacaction.js","components/ButtonAddTransactions/ButtonAddTransactions.jsx","components/TransactionsList/TransactionsListStyled.js","components/TransactionsList/TransactionsList.jsx","pages/DashboardPage/StyledWrapperList.js","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { BsPlusLg } from 'react-icons/bs';\n\nexport const BtnStyled = styled.button`\n  width: 44px;\n  height: 44px;\n  background-image: linear-gradient(\n    96.76deg,\n    #ffc727 -16.42%,\n    #9e40ba 97.04%,\n    #7000ff 150.71%\n  );\n  box-shadow: 1px 9px 15px rgba(0, 0, 0, 0.2);\n  color: currentColor;\n  border-radius: 50%;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  bottom: 40px;\n  right: 40px;\n  transition: 250ms;\n\n  &:hover,\n  &:focus {\n    outline: none;\n    background: linear-gradient(97deg, #deac1e 0%, #9e40ba 61%, #7c3dcb 91%);\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n    transition: 250ms;\n  }\n  @media (max-width: 768px) {\n    bottom: 20px;\n    right: 20px;\n  }\n`;\nexport const BtnPlus = styled(BsPlusLg)`\n  width: 28px;\n  height: 28px;\n  background: transparent;\n  color: #fbfbfb;\n`;\n","import Modal from 'components/Modal/Modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsShowModal,\n} from 'redux/modal/modalSelectors';\nimport { toggleShowModal } from 'redux/modal/modalSlice';\nimport { BtnPlus, BtnStyled } from './StyledButtonAddTransacaction';\n\nexport const ButtonAddTransactions = () => {\n  const isShowModal = useSelector(selectIsShowModal);\n  const dispatch = useDispatch();\n\n  const handleOpenModal = e => {\n    dispatch(toggleShowModal(e.currentTarget.name));\n  };\n\n  return (\n    <>\n      <BtnStyled type=\"button\" name=\"addTrans\" onClick={handleOpenModal}>\n        <BtnPlus />\n      </BtnStyled>\n      {isShowModal && <Modal />}\n    </>\n  );\n};\n","import { styled } from 'styled-components';\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\n\nexport const TransactionContainer = styled.ul`\n  list-style: none;\n  height: 75vh;\n  overflow: auto;\n`;\nexport const TransactionList = styled.ul`\n  width: 100%;\n  width: 280px;\n  margin-top: 8px;\n  border-radius: 10px;\n  overflow: hidden;\n  margin-bottom: 8px;\n  border-left: 5px solid\n    ${props => (props.type === 'INCOME' ? '#FFB627' : '#FF868D')};\n`;\nexport const TransactionItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  color: white;\n  font-weight: 400;\n  background: rgba(255, 255, 255, 0.07);\n  padding: 12px 15px;\n  font-size: 16px;\n\n  &:after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: rgba(255, 255, 255, 0.15);\n  }\n`;\nexport const TransactionTitle = styled.p`\n  font-weight: 600;\n`;\n\nexport const TableSt = styled.table`\n  margin-top: 46px;\n  width: 100%;\n  height: 356px;\n  overflow-y: auto;\n`;\nexport const TableHeadSt = styled.thead`\n  background-color: rgba(81.88, 59, 126.44, 0.8);\n`;\nexport const HeadRow = styled.tr`\n  display: grid;\n  grid-template-columns: 0.72fr 0.5fr 1.05fr 1.5fr 0.7fr 0.6fr 0.1fr;\n  width: 100%;\n  color: #fbfbfb;\n  border-radius: 8px;\n  box-shadow: 0px 4px 60px rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(100px);\n  overflow-y: auto;\n  @media (max-width: 1280px) {\n    grid-template-columns: 0.72fr 0.5fr 1.05fr 1.5fr 0.7fr 0.7fr 0.1fr;\n  }\n`;\nexport const HeadTitle = styled.th`\n  font-weight: 600;\n  font-size: 16px;\n  color: #fbfbfb;\n  text-align: left;\n`;\nexport const TableBodySt = styled.tbody`\n  display: block;\n`;\nexport const TableRowStyled = styled.tr`\n  border-top: none;\n  font-size: 14px;\n  color: #fbfbfb;\n  font-weight: 400;\n  text-align: left;\n  position: relative;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 0.8fr 0.6fr 1.2fr 1.7fr 0.7fr 0.4fr 0.15fr;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n`;\nexport const TableInfo = styled.td``;\nexport const BtnCont = styled.td`\n  width: 100%;\n  display: flex;\n  border-top: none;\n  text-align: right;\n  justify-content: center;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  gap: 8px;\n`;\nexport const BtnEdit = styled.button`\n  background-color: transparent;\n  border: none;\n`;\nexport const BtnEditTransaction = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  text-align: center;\n  font-size: 16px;\n  padding: 4px 12px;\n  border-radius: 18px;\n  border: none;\n  width: 69px;\n  height: 29px;\n  color: #ffffff8f;\n  cursor: pointer;\n  transition: 250ms;\n  background-color: transparent;\n  border: none;\n`;\nexport const BtnIcon = styled(ModeEditOutlineOutlinedIcon)`\n  color: #ffffff8f;\n  transition: 250ms;\n  &:active,\n  &:focus,\n  &:hover {\n    color: #ffffffc4;\n    cursor: pointer;\n    transition: 250ms;\n    transform: scale(1.1);\n  }\n`;\nexport const BtnDelete = styled.button`\n  text-align: center;\n  color: #fbfbfb;\n  font-size: 14px;\n  font-weight: 400;\n  height: 100%;\n  padding: 5px 12px;\n  background-image: linear-gradient(\n    96.76deg,\n    #ffc727 -16.42%,\n    #9e40ba 97.04%,\n    #7000ff 150.71%\n  );\n  box-shadow: 1px 9px 15px rgba(0, 0, 0, 0.2);\n  border: none;\n  border-radius: 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 2px;\n  display: inline-flex;\n  transition: 250ms;\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background: linear-gradient(97deg, #deac1e 0%, #9e40ba 61%, #7c3dcb 91%);\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n    transition: 250ms;\n    transform: scale(1.03);\n    outline: none;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectCategories,  \n  selectTransactions,\n} from 'redux/selectors';\n\nimport { makerDashboardTab } from 'helpers/helpers';\n\nimport { Paper, Table, TableCell, TableContainer } from '@mui/material';\nimport {\n  deleteTransactionThunk,  \n} from 'redux/Thunks/TransactionsThunk';\nimport {\n  BtnCont,\n  BtnDelete,\n  BtnEdit,\n  BtnEditTransaction,\n  BtnIcon,\n  HeadRow,\n  TableBodySt,\n  TableHeadSt,\n  TableRowStyled,\n  TransactionContainer,\n  TransactionItem,\n  TransactionList,\n  TransactionTitle,\n} from './TransactionsListStyled';\nimport MediaQuery from 'react-responsive';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { saveIdTransaction, toggleShowModal } from 'redux/modal/modalSlice';\nimport { notifyDeleted } from 'components/Toastify/Toastify';\n\nexport const TransactionsList = () => {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectCategories);\n\n  const handleClickEdit = e => {\n    dispatch(saveIdTransaction(e.currentTarget.id));\n    dispatch(toggleShowModal(e.currentTarget.name));    \n  };\n\n  const handleClickDelete = e => {    \n    const idTransaction = e.currentTarget.id;\n    dispatch(deleteTransactionThunk(idTransaction)).unwrap().then(()=>notifyDeleted());    \n  };\n\n  const rows = makerDashboardTab(transactions).rows;\n  const columns = makerDashboardTab(transactions).columns;\n\n  let findCategory = '';\n\n  function formatDate(date) {\n    const dateObj = new Date(date);\n    const day = String(dateObj.getDate()).padStart(2, '0');\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n    const year = String(dateObj.getFullYear()).slice(-2);\n    return `${day}.${month}.${year}`;\n  }\n\n  return (\n    <>\n      <MediaQuery maxWidth={768}>\n        <TransactionContainer>\n          {transactions.transactions?.map(\n            ({ transactionDate, type, categoryId, comment, amount, id }) => {\n              findCategory = categories.find(\n                category => category.id === categoryId\n              );\n\n              return (\n                <li key={nanoid()}>\n                  <TransactionList type={type}>\n                    <TransactionItem>\n                      <TransactionTitle>Date</TransactionTitle>\n                      <span> {formatDate(transactionDate)}</span>\n                    </TransactionItem>\n                    <TransactionItem>\n                      <TransactionTitle>Type</TransactionTitle>\n                      <span> {type === 'INCOME' ? '+' : '-'}</span>\n                    </TransactionItem>\n                    <TransactionItem>\n                      <TransactionTitle>Category</TransactionTitle>\n                      <span>\n                        {findCategory && findCategory.name\n                          ? findCategory.name\n                          : categoryId}\n                      </span>\n                    </TransactionItem>\n                    <TransactionItem>\n                      <TransactionTitle>Comment</TransactionTitle>\n                      <span> {comment}</span>\n                    </TransactionItem>\n                    <TransactionItem>\n                      <TransactionTitle>Sum</TransactionTitle>\n                      <span\n                        style={{\n                          color: type === 'INCOME' ? '#FFB627' : '#FF868D',\n                          fontWeight: 600,\n                        }}\n                      >\n                        {amount > 0 ? amount : Math.abs(amount.toFixed(2))}\n                      </span>\n                    </TransactionItem>\n                    <TransactionItem>\n                      <BtnDelete\n                        id={id}\n                        type=\"button\"\n                        onClick={handleClickDelete}\n                      >\n                        Delete\n                      </BtnDelete>\n                      <BtnEditTransaction\n                        id={id}\n                        type=\"button\"\n                        name=\"edit\"\n                        onClick={handleClickEdit}\n                      >\n                        {<BtnIcon />} Edit\n                      </BtnEditTransaction>\n                    </TransactionItem>\n                  </TransactionList>\n                </li>\n              );\n            }\n          )}\n        </TransactionContainer>\n      </MediaQuery>\n\n      <MediaQuery minWidth={769}>\n        <Paper\n          sx={{\n            width: '100%',\n            maxWidth: '715px',\n            overflow: 'hidden',\n            background: 'transparent',\n            borderRadius: '8px',\n            marginLeft: 'auto',\n          }}\n        >\n          <TableContainer sx={{ maxHeight: 380 }}>\n            <Table\n              stickyHeader\n              aria-label=\"sticky table\"\n              sx={{\n                background: 'transparent',\n              }}\n            >\n              <TableHeadSt>\n                <HeadRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ maxWidth: column.maxWidth }}\n                      sx={{\n                        borderBottom: 'none',\n                        fontWeight: 600,\n                        fontSize: '16px',\n                      }}\n                    >\n                      {column.name}\n                    </TableCell>\n                  ))}\n                </HeadRow>\n              </TableHeadSt>\n              <TableBodySt>\n                {rows.map(row => {\n                  return (\n                    <TableRowStyled role=\"checkbox\" tabIndex={-1} key={row.id}>\n                      {columns.map((column, idx) => {\n                        const value = row[column.id];\n\n                        return idx === columns.length - 1 ? (\n                          <BtnCont key={column.id}>\n                            <BtnEdit\n                              type=\"button\"\n                              name=\"edit\"\n                              id={row.id}\n                              onClick={handleClickEdit}\n                            >\n                              <BtnIcon sx={{ fontSize: 18 }} />\n                            </BtnEdit>\n                            <BtnDelete\n                              id={row.id}\n                              type=\"button\"\n                              onClick={handleClickDelete}\n                            >\n                              Delete\n                            </BtnDelete>\n                          </BtnCont>\n                        ) : (\n                          <TableCell\n                            key={column.id}\n                            align={column.align}\n                            sx={{\n                              borderBottom: 'none',\n                            }}\n                          >\n                            {column.format && typeof value === 'number'\n                              ? column.format(value)\n                              : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRowStyled>\n                  );\n                })}\n              </TableBodySt>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </MediaQuery>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledWrapperList = styled.div`\n  width: 100%;\n  max-width: 800px;\n  display: flex;\n  padding-top: 46px;\n  flex-direction: column;\n  padding-right: 16px;\n\n  @media (max-width: 1280px) {\n    width: auto;\n    max-width: 704px;\n    padding: 0 32px;\n    padding-top: 20px;\n    align-items: center;\n  }\n  @media (max-width: 768px) {\n    width: auto;\n    padding: 0 20px;\n    padding-top: 20px;\n    justify-content: center;\n    align-items: center;\n    margin: auto;\n  }\n`;\n","import { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport StyledContainer from 'components/Container/StyledContainer';\nimport SideBar from 'components/SideBar/SideBar';\nimport { TransactionsList } from 'components/TransactionsList/TransactionsList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getTransCategoriesThunk,\n  getTransactionsThunk,\n} from 'redux/Thunks/TransactionsThunk';\nimport { selectIsAuth, selectToken } from 'redux/selectors';\nimport { StyledWrapperList } from './StyledWrapperList';\n\nfunction DashboardPage() {\n  const isAuth = useSelector(selectIsAuth);\n  const token = useSelector(selectToken);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isAuth) return;\n    dispatch(getTransactionsThunk());\n    dispatch(getTransCategoriesThunk(token));\n  }, [dispatch, token, isAuth]);\n\n\n  return (\n    isAuth && (\n      <StyledContainer>\n        <SideBar />\n        <StyledWrapperList>\n          <TransactionsList />\n          <ButtonAddTransactions />\n        </StyledWrapperList>\n      </StyledContainer>     \n    )\n  );\n}\nexport default DashboardPage;\n"],"names":["BtnStyled","styled","_templateObject","_taggedTemplateLiteral","BtnPlus","BsPlusLg","_templateObject2","ButtonAddTransactions","isShowModal","useSelector","selectIsShowModal","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","type","name","onClick","e","toggleShowModal","currentTarget","Modal","TransactionContainer","TransactionList","props","TransactionItem","_templateObject3","TransactionTitle","_templateObject4","TableHeadSt","_templateObject5","_templateObject6","HeadRow","_templateObject7","TableBodySt","_templateObject8","_templateObject9","TableRowStyled","_templateObject10","BtnCont","_templateObject11","_templateObject12","BtnEdit","_templateObject13","BtnEditTransaction","_templateObject14","BtnIcon","ModeEditOutlineOutlinedIcon","_templateObject15","BtnDelete","_templateObject16","TransactionsList","_transactions$transac","transactions","selectTransactions","categories","selectCategories","handleClickEdit","saveIdTransaction","id","handleClickDelete","idTransaction","deleteTransactionThunk","unwrap","then","notifyDeleted","rows","makerDashboardTab","columns","findCategory","formatDate","date","dateObj","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","slice","concat","MediaQuery","maxWidth","map","_ref","transactionDate","categoryId","comment","amount","find","category","style","color","fontWeight","Math","abs","toFixed","nanoid","minWidth","Paper","sx","width","overflow","background","borderRadius","marginLeft","TableContainer","maxHeight","Table","stickyHeader","column","TableCell","align","borderBottom","fontSize","row","role","tabIndex","idx","value","length","format","StyledWrapperList","isAuth","selectIsAuth","token","selectToken","useEffect","getTransactionsThunk","getTransCategoriesThunk","StyledContainer","SideBar"],"sourceRoot":""}