{"version":3,"file":"static/js/829.317eeca1.chunk.js","mappings":"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","sources":["pages/LoginPage/LoginPageStyled.js","components/LogInForm/LoginFormStyled.js","components/LogInForm/LogInForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport loginPicture from '../../assets/images/login_desktop@1x.jpg';\n\nexport const LoginPageStyle = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-image: url(${loginPicture});\n  //background-color: rgba(255, 255, 255, 0.3);\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  border-radius: 0px;\n`;\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 533px;\n  height: 570px;\n  /* padding: 80px 62px; */\n  border-radius: 14px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--form-color);\n\n  h3 {\n    margin: 0 auto;\n    color: var(--white);\n    font-size: 28px;\n    font-weight: 400;\n    line-height: 40px;\n  }\n\n  @media (max-width: 780px) {\n    padding: 23px 20px;\n    max-width: 280px;    \n  }\n`;\nexport const LogoStyle = styled.div`\n  width: 100%;\n  margin: 70px auto 52px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from 'styled-components'\n\nexport const InputBtnWrap = styled.div`\n\nwidth: 100%;\nmax-width: 410px;\nmargin: 0 auto;\n\n`\nexport const InputsWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 52px;\ngap: 40px;\n\ndiv{\n    height: 38px;\n}\n`\n\nexport const ButtonsBox = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  button {\n    width: 100%;\n    max-width: 300px;\n    height: 50px;\n    border-radius: 20px;\n    font-size: 18px;\n    text-transform: uppercase;\n    box-shadow: var(--button-shadow);\n    transition: transform 300ms ease-in;\n    border: transparent;\n\n    &:hover {\n      border: 1px solid rgba(74, 86, 226, 1);\n      transform: scale(1.02);\n    }\n  }\n  @media (max-width: 780px) {\n    button {\n    \n      max-width: 280px;\n    }\n  }\n`;\nexport const ButtonActive = styled.button`\n  color: var(--white);\n  background-image: var(--button-gradient);\n`;\nexport const ButtonWhite = styled.button`\n  color: var(--white-button-text);\n  background-color: var(--white-button-bg);\n`;\n","import { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logInUserThunk } from 'redux/Thunks/AuthUserThunk';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { IconButton, InputAdornment, TextField } from '@mui/material';\nimport EmailIcon from '@mui/icons-material/Email';\nimport HttpsIcon from '@mui/icons-material/Https';\nimport {\n  ButtonActive,\n  ButtonWhite,\n  ButtonsBox,\n  InputBtnWrap,\n  InputsWrap,\n} from './LoginFormStyled';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { useState } from 'react';\n\nexport const LogInForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n  const dispatch = useDispatch();\n\n  const handlerOnSubmit = values => {\n    const logInUserData = values;\n    dispatch(logInUserThunk(logInUserData));\n    //Form.reset();\n    // evt.currentTarget.reset();\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required'),\n  });\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      onSubmit={values => handlerOnSubmit(values)}\n      validationSchema={validationSchema}\n    >\n      {formik => (        \n        <Form>          \n          <InputBtnWrap>\n            <InputsWrap>\n              <TextField\n                InputProps={{                  \n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <EmailIcon sx={{color: 'var(--white-40)'}}/>\n                    </InputAdornment>                  \n                  ),                  \n                }}\n                \n                sx={{ input: { color: 'var(--white)' } }}\n                autoFocus = {Boolean('true')}              \n                color= 'secondary'\n                fullWidth = {Boolean('true')}\n                placeholder='Email'\n                variant=\"standard\"\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                error={Boolean(formik.errors.email)}\n                helperText={\n                  formik.errors.email && 'Please enter a valid email address'\n                }\n              />\n\n              <TextField\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <HttpsIcon sx={{color: 'var(--white-40)'}} />\n                    </InputAdornment>\n                  ),\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        sx={{color: 'var(--white-40)'}}\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n                sx={{ input: { color: 'var(--white)' } }}\n                color= 'secondary'\n                fullWidth = {Boolean('true')}\n                placeholder='Password'                \n                variant=\"standard\"\n                label=\"Password\"\n                name=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                onChange={formik.handleChange}\n                error={Boolean(formik.errors.password)}\n                helperText={\n                  formik.errors.password && 'Please enter your valid password'\n                }\n              />\n            </InputsWrap>\n            <ButtonsBox style={{ margin: '52px auto 0' }}>\n              <ButtonActive type=\"submit\">Log in</ButtonActive>\n\n              <Link to=\"/register\">\n                <ButtonWhite type=\"submit\">Register</ButtonWhite>\n              </Link>\n            </ButtonsBox>            \n          </InputBtnWrap>\n        </Form>        \n      )}\n    </Formik>\n  );\n};\n","import { Container, LoginPageStyle, LogoStyle } from './LoginPageStyled';\n//import { Stack } from '@mui/material';\nimport { LogInForm } from 'components/LogInForm/LogInForm';\nimport Logo from '../../assets/images/logo.svg';\n\nfunction LoginPage() {\n  return (\n    <LoginPageStyle>\n      <Container>\n        {/* <Stack> */}\n        <div>\n        <LogoStyle>\n          <img src={Logo} alt=\"Logo Wallet\" width=\"36px\" height=\"36px\" />\n          <h3>MoneyGuard</h3>\n        </LogoStyle>\n        </div>\n        {/* </Stack> */}\n        <LogInForm />\n      </Container>\n    </LoginPageStyle>\n  );\n}\n\nexport default LoginPage;\n"],"names":["LoginPageStyle","styled","_templateObject","_taggedTemplateLiteral","loginPicture","Container","_templateObject2","LogoStyle","_templateObject3","InputBtnWrap","InputsWrap","ButtonsBox","ButtonActive","_templateObject4","ButtonWhite","_templateObject5","LogInForm","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","dispatch","useDispatch","validationSchema","Yup","email","required","password","_jsx","Formik","initialValues","onSubmit","values","logInUserData","logInUserThunk","handlerOnSubmit","children","formik","Form","_jsxs","TextField","InputProps","startAdornment","InputAdornment","position","EmailIcon","sx","color","input","autoFocus","Boolean","fullWidth","placeholder","variant","label","name","type","onChange","handleChange","error","errors","helperText","HttpsIcon","endAdornment","IconButton","onClick","onMouseDown","Visibility","VisibilityOff","style","margin","Link","to","src","Logo","alt","width","height"],"sourceRoot":""}